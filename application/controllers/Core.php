<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Core extends CI_Controller {

    public function css() {

        // $name = str_replace('.css', '.scss', $name);

        // $scss = new scssc();
        // $scss->setImportPaths("css/");
        // $scss->setFormatter("scss_formatter_compressed");
        // $dir = $_SERVER['DOCUMENT_ROOT']."/css/";
        // $server = new scss_server($dir, $this->config->config['cache_path'].'resources', $scss);
        // $server->serve('', $name);

        $scss = new scssc();
        $scss->setFormatter("scss_formatter_compressed");

        $source = '';
        $cache_path = $this->config->config['cache_path'].'resources';
        $file_cache = $cache_path.'/styles.css';

        $mtime_cache = (file_exists($file_cache)) ? filemtime($file_cache) : 0;
        $mtime_files = 0;

        foreach($this->config->config['css_site'] as $file) {
            if(pathinfo($file, PATHINFO_EXTENSION) === 'scss') {

                $scss->last_modified = filemtime($file);
                $scss->compile('@import "'.$file.'"');
                if($mtime_files < $scss->last_modified) {
                    $mtime_files =$scss->last_modified;
                }

            } else {
                if($mtime_files < filemtime($file)) {
                    $mtime_files = filemtime($file);
                }
            }
        }

        if($mtime_cache > $mtime_files) {
            header("Content-Type: text/css");
            $lastModified  = gmdate('D, d M Y H:i:s', $mtime_cache) . ' GMT';
            header('Last-Modified: ' . $lastModified);
            echo file_get_contents($file_cache);

            return;
        }

        $t = @date('r');

        foreach($this->config->config['css_site'] as $file) {
            if(pathinfo($file, PATHINFO_EXTENSION) === 'scss') {
                $source .= $scss->compile('@import "'.$file.'"');
            } else {
                $source .= $scss->compile(file_get_contents($file));
            }
        }

        $source = "/* generated by trivy on  ".@date('r')." */\n\n" . $source;

        $file = fopen($file_cache, 'w+');
        fwrite($file, $source);
        fclose($file);
        $mtime_cache = filemtime($file_cache);

        header("Content-Type: text/css");
        $lastModified  = gmdate('D, d M Y H:i:s', $mtime_cache) . ' GMT';
        header('Last-Modified: ' . $lastModified);
        echo $source;
    }

    public function js() {
        $jz = new JSqueeze();

        $source = '';
        $cache_path = $this->config->config['cache_path'].'resources';
        $file_cache = $cache_path.'/javascript.js';

        $mtime_cache = (file_exists($file_cache)) ? filemtime($file_cache) : 0;
        $mtime_files = 0;

        foreach($this->config->config['js_site'] as $file) {
            if($mtime_files < filemtime($file)) {
                $mtime_files = filemtime($file);
            }
        }

        if($mtime_cache > $mtime_files) {
            header("Content-Type: application/javascript");
            $lastModified  = gmdate('D, d M Y H:i:s', $mtime_cache) . ' GMT';
            header('Last-Modified: ' . $lastModified);
            echo file_get_contents($file_cache);

            return;
        }

        foreach($this->config->config['js_site'] as $file) {
            $source .= file_get_contents($file);
        }

        $minifiedJs = $jz->squeeze(
            $source,
            true,   // $singleLine
            true,   // $keepImportantComments
            false   // $specialVarRx
        );

        if(!file_exists($cache_path)) {
            mkdir($cache_path);
        }

        $minifiedJs = "/* generated by trivy on  ".@date('r')." */\n\n" . $minifiedJs;

        $file = fopen($file_cache, 'w+');
        fwrite($file, $minifiedJs);
        fclose($file);
        // file_put_contents($file_cache, $minifiedJs);
        $mtime_cache = filemtime($file_cache);

        header("Content-Type: application/javascript");
        $lastModified  = gmdate('D, d M Y H:i:s', $mtime_cache) . ' GMT';
        header('Last-Modified: ' . $lastModified);
        echo $minifiedJs;
    }

    public function robots()
    {
        header("Content-Type:text/plain");
        if(strpos($_SERVER['SERVER_NAME'], 'localhost') !== false || strpos($_SERVER['SERVER_NAME'], 'devsite') !== false) {
            echo 'User-agent: *'.chr(13);
            echo 'Disallow:'.chr(13);
            echo 'Disallow: *'.chr(13);
        } else {
            echo 'User-agent: *'.chr(13);
            echo 'Allow:'.chr(13);
            echo 'Allow: *'.chr(13);
            echo 'Disallow: /js/'.chr(13);
            echo 'Disallow: /css/'.chr(13);
        }
    }
}
